<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="/OpticsParameterNode.java" timestamp="1562271155927">
        <mark key="[" line="88" column="0" />
        <mark key="]" line="93" column="8" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-app-beta-beating/src/java/cern/lhc/betabeating/controller/Controller.java" timestamp="1562673470878">
        <mark key="[" line="269" column="24" />
        <mark key="]" line="308" column="24" />
        <mark key="." line="312" column="40" />
        <mark key="^" line="308" column="24" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-app-beta-beating/src/java/cern/lhc/betabeating/model/tfs/DataColumnFloat.java" timestamp="1562672846592">
        <mark key="[" line="20" column="26" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-app-beta-beating/src/java/cern/lhc/betabeating/model/dataviewerr/BBChartRenderer.java" timestamp="1562683137487">
        <mark key="[" line="3" column="0" />
        <mark key="]" line="3" column="0" />
        <mark key="." line="3" column="0" />
      </file>
      <file name="/a.dummy" timestamp="1562683144419">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-app-beta-beating/src/java/cern/lhc/betabeating/datahandler/OpticsColumnHandler.java" timestamp="1562769118803">
        <mark key="[" line="3" column="16" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-app-beta-beating/src/java/cern/lhc/betabeating/external/documentation" timestamp="1562770403756">
        <mark key="[" line="28" column="29" />
      </file>
      <file name="/tmp/bob_cache_jdilly/caches/modules-2/files-2.1/cern.dm/jdataviewer/1.8.8/28ec3211cb17b191f76338d18fc9f7e1cf750728/jdataviewer-1.8.8-sources.jar!/cern/jdve/interactor/CoordinatesPane.java" timestamp="1562678882926">
        <mark key="[" line="282" column="0" />
        <mark key="]" line="296" column="16" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-app-beta-beating/src/java/cern/lhc/betabeating/model/mainWindow/opticsPanel/opticsDataTree/CategoryNode.java" timestamp="1562758815770">
        <mark key="[" line="101" column="27" />
        <mark key="]" line="101" column="73" />
        <mark key="." line="101" column="73" />
        <mark key="^" line="101" column="73" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-app-beta-beating/src/java/cern/lhc/betabeating/view/chartTools/LabelInteractor.java" timestamp="1562681231961">
        <mark key="[" line="89" column="21" />
        <mark key="]" line="89" column="21" />
        <mark key="." line="89" column="21" />
        <mark key="^" line="89" column="26" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-app-beta-beating/src/java/cern/lhc/betabeating/model/mainWindow/opticsPanel/opticsDataTree/Leaf.java" timestamp="1562686828025">
        <mark key="[" line="69" column="5" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-app-beta-beating/src/java/cern/lhc/betabeating/model/dataviewerr/BBErrorDataSetRenderer.java" timestamp="1562683750509">
        <mark key="[" line="7" column="56" />
        <mark key="]" line="16" column="15" />
        <mark key="^" line="16" column="15" />
        <mark key="." line="16" column="15" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-app-beta-beating/src/java/cern/lhc/betabeating/main/MyJavaTest.java" timestamp="1562321846993">
        <mark key="[" line="2" column="25" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-app-beta-beating/src/java/cern/lhc/betabeating/model/mainWindow/opticsPanel/opticsDataTree/OpticsColumn.java" timestamp="1562341100775">
        <mark key="[" line="51" column="4" />
        <mark key="]" line="51" column="4" />
        <mark key="." line="51" column="4" />
        <mark key="^" line="50" column="9" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-app-beta-beating/src/java/cern/lhc/betabeating/model/dataviewerr/OpticsChartDefinitions.java" timestamp="1562769328632">
        <mark key="[" line="336" column="16" />
        <mark key="]" line="336" column="17" />
        <mark key="^" line="336" column="13" />
        <mark key="." line="336" column="14" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-app-beta-beating/src/java/cern/lhc/betabeating/datahandler/RDTFunctions.java" timestamp="1562265131716">
        <mark key="[" line="35" column="0" />
        <mark key="]" line="41" column="8" />
        <mark key="." line="5" column="27" />
        <mark key="^" line="5" column="27" />
      </file>
      <file name="/tmp/bob_cache_jdilly/caches/modules-2/files-2.1/cern.dm/jdataviewer/1.8.8/28ec3211cb17b191f76338d18fc9f7e1cf750728/jdataviewer-1.8.8-sources.jar!/cern/jdve/ChartRenderer.java" timestamp="1562683746830">
        <mark key="[" line="388" column="0" />
        <mark key="]" line="398" column="8" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-app-beta-beating/src/java/cern/lhc/betabeating/view/mainWindow/opticsPanel/TabOpticsDataSelection.java" timestamp="1562759596888">
        <mark key="[" line="672" column="62" />
        <mark key="]" line="672" column="62" />
        <mark key="." line="672" column="62" />
        <mark key="^" line="672" column="62" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-app-beta-beating/src/java/cern/lhc/betabeating/model/mainWindow/opticsPanel/opticsDataTree/RDTNode.java" timestamp="1562766774830">
        <mark key="[" line="55" column="22" />
        <mark key="]" line="55" column="22" />
        <mark key="." line="55" column="22" />
        <mark key="^" line="55" column="22" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-app-beta-beating/src/java/cern/lhc/betabeating/datahandler/OpticsFileHandler.java" timestamp="1562687154836">
        <mark key="[" line="187" column="69" />
        <mark key="]" line="187" column="72" />
        <mark key="." line="187" column="0" />
        <mark key="^" line="218" column="60" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-app-beta-beating/src/java/cern/lhc/betabeating/model/mainWindow/opticsPanel/opticsDataTree/OpticsParameter.java" timestamp="1562758660474">
        <mark key="[" line="51" column="43" />
        <mark key="]" line="53" column="9" />
        <mark key="." line="51" column="0" />
        <mark key="^" line="47" column="27" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-app-beta-beating/src/java/cern/lhc/betabeating/view/mainWindow/opticsPanel/TabOpticsCharts.java" timestamp="1562770747892">
        <mark key="[" line="274" column="9" />
        <mark key="]" line="277" column="0" />
        <mark key="^" line="257" column="37" />
        <mark key="." line="277" column="0" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-app-beta-beating/src/java/cern/lhc/betabeating/model/mainWindow/opticsPanel/opticsDataTree/OpticsParameterNode.java" timestamp="1562770608250">
        <mark key="[" line="91" column="0" />
        <mark key="]" line="91" column="0" />
        <mark key="." line="91" column="0" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/myJavaTests/src/Main.java" timestamp="1562321986424">
        <mark key="[" line="0" column="19" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-app-beta-beating/src/java/cern/lhc/betabeating/model/mainWindow/opticsPanel/opticsDataTree/NodeInterface.java" timestamp="1562675207477">
        <mark key="[" line="12" column="0" />
        <mark key="]" line="12" column="0" />
        <mark key="." line="12" column="0" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-app-beta-beating/src/java/cern/lhc/betabeating/tools/logging/TBLogger.java" timestamp="1562667443384">
        <mark key="[" line="264" column="33" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-app-beta-beating/src/java/cern/lhc/betabeating/view/mainWindow/opticsPanel/TabOptics.java" timestamp="1562666280031">
        <mark key="[" line="73" column="35" />
        <mark key="]" line="73" column="35" />
        <mark key="^" line="73" column="12" />
        <mark key="." line="73" column="35" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-app-beta-beating/src/java/cern/lhc/betabeating/model/mainWindow/opticsPanel/OpticsChartData.java" timestamp="1562325617965">
        <mark key="[" line="2" column="28" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-multiturn/src/java/cern/lhc/multiturn/datamanagement/MonitorSetImpl.java" timestamp="1562248633465">
        <mark key="[" line="672" column="12" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-app-beta-beating/src/java/cern/lhc/betabeating/model/mainWindow/opticsPanel/opticsDataTree/ColumnLeaf.java" timestamp="1562273353130">
        <mark key="[" line="21" column="29" />
        <mark key="]" line="21" column="0" />
        <mark key="." line="21" column="0" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-app-beta-beating/src/java/cern/lhc/betabeating/model/mainWindow/opticsPanel/opticsDataTree/Root.java" timestamp="1562674960302">
        <mark key="[" line="58" column="24" />
        <mark key="]" line="58" column="24" />
        <mark key="." line="58" column="24" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-app-beta-beating/src/java/cern/lhc/betabeating/model/dataviewerr/OpticsDataSetDefinition.java" timestamp="1562767468380">
        <mark key="[" line="109" column="0" />
        <mark key="]" line="109" column="0" />
        <mark key="." line="109" column="0" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-app-beta-beating/src/java/cern/lhc/betabeating/model/mainWindow/opticsPanel/opticsDataTree/Category.java" timestamp="1562758254959">
        <mark key="[" line="24" column="42" />
        <mark key="]" line="18" column="36" />
        <mark key="." line="18" column="32" />
        <mark key="^" line="9" column="26" />
      </file>
      <file name="/media/jdilly/Storage/Repositories/Java-Repos/lhc-app-beta-beating/src/java/cern/lhc/betabeating/model/dataviewerr/BBDefaultDataSet.java" timestamp="1562676738944">
        <mark key="[" line="19" column="91" />
        <mark key="]" line="26" column="35" />
        <mark key="." line="26" column="0" />
        <mark key="^" line="20" column="25" />
      </file>
      <file name="/fragment.java" timestamp="1562766584264">
        <mark key="[" line="0" column="0" />
      </file>
    </filemarks>
    <jumps />
    <registers>
      <register name="&quot;" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="-" type="4">
        <text>.</text>
      </register>
      <register name="0" type="4">
        <text>AMP</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="2" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="w" type="4">
        <text>vi(&quot;0p</text>
      </register>
      <register name="8" type="2">
        <text encoding="base64">Ly8gICAgcHJpdmF0ZSBmaW5hbCBNYXA8T3B0aWNzQ29sdW1uLCBDaGFydD4gbWFwU3ViTm9kZVRvQ2hhcnQxID0gbmV3IEhhc2hNYXA8T3B0aWNzQ29sdW1uLCBDaGFydD4oKTsKLy8KLy8gICAgcHVibGljIENoYXJ0IGdldENoYXJ0MUZvclN1Yk5vZGUoZmluYWwgT3B0aWNzQ29sdW1uIGxlYWYpIHsKLy8gICAgICAgIHJldHVybiBtYXBTdWJOb2RlVG9DaGFydDEuZ2V0KGxlYWYpOwovLyAgICB9Ci8vCi8vICAgIHB1YmxpYyB2b2lkIHNhdmVDaGFydDFGb3JTdWJOb2RlKGZpbmFsIENoYXJ0IGNoYXJ0LCBmaW5hbCBPcHRpY3NDb2x1bW4gc3Vibm9kZSkgewovLyAgICAgICAgbWFwU3ViTm9kZVRvQ2hhcnQxLnB1dChzdWJub2RlLCBjaGFydCk7Ci8vICAgIH0KLy8KLy8gICAgcHJpdmF0ZSBmaW5hbCBNYXA8T3B0aWNzQ29sdW1uLCBDaGFydD4gbWFwU3ViTm9kZVRvQ2hhcnQyID0gbmV3IEhhc2hNYXA8T3B0aWNzQ29sdW1uLCBDaGFydD4oKTsKLy8KLy8gICAgcHVibGljIENoYXJ0IGdldENoYXJ0MkZvclN1Yk5vZGUoZmluYWwgT3B0aWNzQ29sdW1uIGxlYWYpIHsKLy8gICAgICAgIHJldHVybiBtYXBTdWJOb2RlVG9DaGFydDIuZ2V0KGxlYWYpOwovLyAgICB9Ci8vCi8vICAgIHB1YmxpYyB2b2lkIHNhdmVDaGFydDJGb3JTdWJOb2RlKGZpbmFsIENoYXJ0IGNoYXJ0LCBmaW5hbCBPcHRpY3NDb2x1bW4gc3Vibm9kZSkgewovLyAgICAgICAgbWFwU3ViTm9kZVRvQ2hhcnQyLnB1dChzdWJub2RlLCBjaGFydCk7Ci8vICAgIH0K</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">ICAgICAgICAgICAgT3B0aWNzQ29sdW1uSGFuZGxlciBjb2x1bW5IYW5kbGVyID0gdHlwZS50b0hhbmRsZXIoKTsK</text>
      </register>
    </registers>
    <search>
      <last-dir>0</last-dir>
      <show-last>false</show-last>
    </search>
    <history />
    <shortcut-conflicts>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>